name: Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Получаем всю историю коммитов

      - name: Prepare code folder
        run: |
          # Создаем временную папку с содержимым code
          mkdir -p temp_deploy
          cp -r ./code/* temp_deploy/
          tar -czf code.tar.gz -C temp_deploy .

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy via SSH
        run: |
          # Копируем архив на сервер
          scp -o StrictHostKeyChecking=no code.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:./yanisgrek-main/
          
          # Распаковываем на сервере
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e
          set -x
          
          WORK_DIR="./yanisgrek-main"
          cd $WORK_DIR || { echo "Directory $WORK_DIR not found"; exit 1; }
          
          # Очищаем папку code, сохраняя .git если есть
          if [ -d "code" ]; then
            find code/ -mindepth 1 -maxdepth 1 ! -name '.git' -exec rm -rf {} +
          else
            mkdir code
          fi
          
          # Распаковываем новый код
          tar -xzf code.tar.gz -C code/
          rm code.tar.gz
          
          # Запускаем docker
          docker compose build app --no-cache
          docker compose up -d --no-deps app
          
          docker compose ps
          EOF
